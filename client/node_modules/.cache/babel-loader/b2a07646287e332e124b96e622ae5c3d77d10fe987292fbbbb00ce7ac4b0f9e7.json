{"ast":null,"code":"var _jsxFileName = \"/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\"; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      // Registration successful, now log in\n      const loginResponse = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (loginResponse.ok) {\n        const userInfo = await loginResponse.json();\n        setUserInfo(userInfo);\n        navigate('/');\n      } else {\n        alert('Login failed after registration');\n      }\n    } else {\n      alert('Registration failed: Try a different username');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"bE3mumElGMe4uuVlpp2pO891PLQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","useContext","useNavigate","UserContext","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","setUserInfo","navigate","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","loginResponse","credentials","ok","userInfo","json","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\"; // Adjust the import path as needed\n\nexport default function RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { setUserInfo } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    if (response.status === 200) {\n      // Registration successful, now log in\n      const loginResponse = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        body: JSON.stringify({ username, password }),\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n      });\n      if (loginResponse.ok) {\n        const userInfo = await loginResponse.json();\n        setUserInfo(userInfo);\n        navigate('/');\n      } else {\n        alert('Login failed after registration');\n      }\n    } else {\n      alert('Registration failed: Try a different username');\n    }\n  }\n\n  return (\n    <form className=\"register\" onSubmit={register}>\n      <h1>Register</h1>\n      <input type=\"text\"\n        placeholder=\"username\"\n        value={username}\n        onChange={ev => setUsername(ev.target.value)} />\n      <input type=\"password\"\n        placeholder=\"password\"\n        value={password}\n        onChange={ev => setPassword(ev.target.value)} />\n      <button>Register</button>\n    </form>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}