{"ast":null,"code":"var _jsxFileName = \"/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/IndexPage.js\",\n  _s = $RefreshSig$();\nimport Post from \"../Post\";\nimport { useEffect, useState } from \"react\";\nimport './IndexPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IndexPage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('latest');\n  useEffect(() => {\n    fetchPosts();\n  }, [sortBy]);\n  const fetchPosts = async () => {\n    const response = await fetch(`http://localhost:4000/post?sort=${sortBy}`);\n    const data = await response.json();\n    setPosts(data);\n  };\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"index-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort-select\",\n        children: \"Sort by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort-select\",\n        value: sortBy,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"latest\",\n          children: \"Latest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"votes\",\n          children: \"Most Votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), posts.length > 0 && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      ...post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(IndexPage, \"m0xM4TwOtGlKXm575lC5RjNieIg=\");\n_c = IndexPage;\nvar _c;\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"names":["Post","useEffect","useState","jsxDEV","_jsxDEV","IndexPage","_s","posts","setPosts","sortBy","setSortBy","fetchPosts","response","fetch","data","json","handleSortChange","event","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","length","map","post","_id","_c","$RefreshReg$"],"sources":["/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/IndexPage.js"],"sourcesContent":["import Post from \"../Post\";\nimport { useEffect, useState } from \"react\";\nimport './IndexPage.css';\n\nexport default function IndexPage() {\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('latest');\n\n  useEffect(() => {\n    fetchPosts();\n  }, [sortBy]);\n\n  const fetchPosts = async () => {\n    const response = await fetch(`http://localhost:4000/post?sort=${sortBy}`);\n    const data = await response.json();\n    setPosts(data);\n  };\n\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n  };\n\n  return (\n    <div className=\"index-page\">\n      <div className=\"sort-container\">\n        <label htmlFor=\"sort-select\">Sort by: </label>\n        <select id=\"sort-select\" value={sortBy} onChange={handleSortChange}>\n          <option value=\"latest\">Latest</option>\n          <option value=\"votes\">Most Votes</option>\n        </select>\n      </div>\n      {posts.length > 0 && posts.map(post => (\n        <Post key={post._id} {...post} />\n      ))}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCJ,MAAM,EAAE,CAAC;IACzE,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,QAAQ,CAACM,IAAI,CAAC;EAChB,CAAC;EAED,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAClCP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBjB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjB,OAAA;QAAOkB,OAAO,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CtB,OAAA;QAAQuB,EAAE,EAAC,aAAa;QAACR,KAAK,EAAEV,MAAO;QAACmB,QAAQ,EAAEZ,gBAAiB;QAAAK,QAAA,gBACjEjB,OAAA;UAAQe,KAAK,EAAC,QAAQ;UAAAE,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCtB,OAAA;UAAQe,KAAK,EAAC,OAAO;UAAAE,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLnB,KAAK,CAACsB,MAAM,GAAG,CAAC,IAAItB,KAAK,CAACuB,GAAG,CAACC,IAAI,iBACjC3B,OAAA,CAACJ,IAAI;MAAA,GAAoB+B;IAAI,GAAlBA,IAAI,CAACC,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CAhCuBD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}