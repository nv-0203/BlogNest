{"ast":null,"code":"var _jsxFileName = \"/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport { format } from \"date-fns\";\nimport Post from '../Post';\nimport './ProfilePage.css';\nimport defaultProfilePic from '../images/default_profile.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage() {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [sortBy, setSortBy] = useState('latest');\n  const {\n    userId\n  } = useParams();\n  const {\n    setUserInfo,\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetchProfile();\n  }, [userId, sortBy]);\n  const fetchProfile = async () => {\n    try {\n      const response = await fetch(`${config.API_URL}/profile/${userId}?sort=${sortBy}`, {\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProfile(data);\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n    }\n  };\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n  };\n  function logout() {\n    fetch(`${config.API_URL}/logout`, {\n      credentials: 'include',\n      method: 'POST'\n    }).then(() => {\n      setUserInfo(null);\n    });\n  }\n  if (!profile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sort-select\",\n          children: \"Sort posts by: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sort-select\",\n          value: sortBy,\n          onChange: handleSortChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"latest\",\n            children: \"Latest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"votes\",\n            children: \"Most Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: profile.posts.length > 0 ? profile.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          ...post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.user.profilePicture !== '' ? `${config.API_URL}/${profile.user.profilePicture}` : defaultProfilePic,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: profile.user.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"@\", profile.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: profile.user.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), profile.user.createdAt && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Joined:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this), \" \", format(new Date(profile.user.createdAt), 'dd MMM yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), userInfo && userInfo.id === userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-profile\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"edit-btn\",\n            to: `/editProfile/${userInfo.id}`,\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-btn\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"aF1jkSTgEIVB+qW5zUNFuyW6ZOg=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useParams","Link","UserContext","format","Post","defaultProfilePic","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","profile","setProfile","sortBy","setSortBy","userId","setUserInfo","userInfo","fetchProfile","response","fetch","config","API_URL","credentials","data","json","ok","console","error","handleSortChange","event","target","value","logout","method","then","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","posts","length","map","post","_id","src","user","profilePicture","alt","displayName","username","about","createdAt","Date","to","onClick","_c","$RefreshReg$"],"sources":["/Users/nufailvhora/Desktop/Projects/BlogNest/client/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport { format } from \"date-fns\";\nimport Post from '../Post';\nimport './ProfilePage.css';\nimport defaultProfilePic from '../images/default_profile.png';\n\nexport default function ProfilePage() {\n  const [profile, setProfile] = useState(null);\n  const [sortBy, setSortBy] = useState('latest');\n  const { userId } = useParams();\n  const { setUserInfo, userInfo } = useContext(UserContext);\n\n  useEffect(() => {\n    fetchProfile();\n  }, [userId, sortBy]);\n\n  const fetchProfile = async () => {\n    try {\n      const response = await fetch(`${config.API_URL}/profile/${userId}?sort=${sortBy}`, {\n        credentials: 'include',\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProfile(data);\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n    }\n  };\n\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n  };\n\n  function logout() {\n    fetch(`${config.API_URL}/logout`, {\n      credentials: 'include',\n      method: 'POST',\n    }).then(() => {\n      setUserInfo(null);\n    });\n  }\n\n  if (!profile) return <div>Loading...</div>;\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"posts-section\">\n        <h2>Posts:</h2>\n        <div className=\"sort-container\">\n          <label htmlFor=\"sort-select\">Sort posts by: </label>\n          <select id=\"sort-select\" value={sortBy} onChange={handleSortChange}>\n            <option value=\"latest\">Latest</option>\n            <option value=\"votes\">Most Votes</option>\n          </select>\n        </div>\n        <div className=\"user-posts\">\n          {profile.posts.length > 0 ? (\n            profile.posts.map(post => (\n              <Post key={post._id} {...post} />\n            ))\n          ) : (\n            <p>No posts yet.</p>\n          )}\n        </div>\n      </div>\n      <div className=\"profile-section\">\n        <img\n          src={profile.user.profilePicture !== '' ? `${config.API_URL}/${profile.user.profilePicture}` : defaultProfilePic}\n          alt=\"Profile\"\n        />\n        <h1>{profile.user.displayName}</h1>\n        <div className=\"user-info\">\n          {/* <p>{profile.user.followerCount} Followers</p> */}\n          <p>@{profile.user.username}</p>\n          <p>{profile.user.about}</p>\n          {profile.user.createdAt && <p><strong>Joined:</strong> {format(new Date(profile.user.createdAt), 'dd MMM yyyy')}</p>}\n        </div>\n        {userInfo && userInfo.id === userId && (\n          <>\n          <div className=\"edit-profile\">\n          <Link className=\"edit-btn\" to={`/editProfile/${userInfo.id}`}>\n            Update Profile\n          </Link>\n          </div>\n          <div className=\"logout-btn-container\">\n            <button className=\"logout-btn\" onClick={logout}>\n              Logout\n            </button>\n          </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}